function Spaceship() {    this.pos = {x:canvas.width/2, y:canvas.height/2},    this.vel = {x:0, y:0},    this.img = game_images[1];    this.width = 90,    this.height = 90,    this.thrust = false,    this.angle = 0,    this.angle_vel = 0,    this.drag_factor  = 0.95,    this.turn_speed = 5;    this.radius = this.width / 2;    this.center = function(){        return {x: this.pos.x + this.radius, y: this.pos.y + this.radius};    };        this.update = function(){        //update angle        this.angle += this.angle_vel;        //update position mod-ing for screen wrap        cw = canvas.width;        ch = canvas.height;        this.pos.x = ((((this.pos.x + this.vel.x) % cw) + cw) % cw);        this.pos.y = ((((this.pos.y + this.vel.y) % ch) + ch) % ch);        //update thrust        if (this.thrust){            acc = angle_to_vector(this.angle);            this.vel.x += acc.x ;            this.vel.y += acc.y ;            snd_thrust.loop = true;            snd_thrust.play();        }else{            snd_thrust.pause();        }        //drag        this.vel.x *= this.drag_factor;        this.vel.y *= this.drag_factor;    };        //rotate functions    this.inc_angle_vel = function(){        this.angle_vel = this.turn_speed;    };        this.dec_angle_vel = function(){        this.angle_vel = -this.turn_speed;    };        this.reset_angle_vel = function(){        this.angle_vel = 0;    };    this.fire = function(){        forward = angle_to_vector(this.angle);        current = this.center();        //fire from the front of the ship        missle_pos = {x: current.x + this.radius * forward.x -10,                    y: current.y + this.radius * forward.y -5};/*        var b = Bullet({            pos: missle_pos,            vel:{x: this.vel.x, y: this.vel.y},            angle: this.angle,            sound: snd_fire.cloneNode().play()        });*/        var b = new Class_Bullet();        b.pos = missle_pos;        b.vel = {x: this.vel.x, y: this.vel.y};        b.angle = this.angle;        b.sound = snd_fire.cloneNode().play();        bullets.push(b);    };    this.draw = function(){        ctx.save();        ctx.translate(this.pos.x+(this.width/2), this.pos.y+(this.height/2));        ctx.rotate(this.angle * Math.PI/ 180);        ctx.translate(-(this.pos.x+(this.width/2)), -(this.pos.y+(this.height/2)));        //which image to draw (thrust or not)        var th = this.thrust? 90: 0;        try{            ctx.drawImage(this.img, 0+th, 0, this.width, this.height,                this.pos.x, this.pos.y, this.width, this.height);        }catch(e){            console.log("error:", this.pos, this.width, this.height);            console.log(e);        }        ctx.restore();    };}